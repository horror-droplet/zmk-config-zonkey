#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角
#define JP_BSLH  INT1         // (backslash)

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    mo2: mo2 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N2>, <&kp AT>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mo6: mo6 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N6>, <&kp CARET>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mo7: mo7 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N7>, <&kp AMPS>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mo8: mo8 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N8>, <&kp ASTRK>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mo9: mo9 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N9>, <&kp LPAR>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mo0: mo0 {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp N0>, <&kp LS(N9)>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moA: moA {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp UNDERSCORE>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moB: moB {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp EQUAL>, <&kp PLUS>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moC: moC {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp INT3>, <&kp JP_PIPE>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moD: moD {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp LBKT>, <&kp LBRC>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moE: moE {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp RBKT>, <&kp RBRC>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moF: moF {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp SEMI>, <&kp KP_PLUS>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moG: moG {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp APOSTROPHE>, <&kp DQT>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moH: moH {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp BACKSLASH>, <&kp TILDE2>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    moI: moI {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp JP_BSLH>, <&kp JP_UNDERSCORE>;

        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |                        |  Y  |  U   |  I  |  O  |  P  | 
            // |  A  |  S  |  D  |  F  |  G  |LS(LG(S))|        　 | - |  H  |  J   |  K  |  L  |  `  | 
            // |SHIFT|  Z  |  X  |  C  |  V  |  B  |           | ; |  N  |  M   |  ,  |  .  |  /  | 
            // | CTRL | WIN | ALT |HENKAN|SPACE|MUHENKAN|       | BS | ENT |      　　　　       | DEL |           

            bindings = <
&kp Q           &kp W         &kp E         &kp R             &kp T                                                   &kp Y      &kp U      &kp I      &kp O    &kp P
&kp A           &kp S         &kp D         &lt 5 F           &lt 4 G           &kp LS(LG(S))    &kp INT_HENKAN       &kp H      &kp J      &kp K      &kp L    &kp SEMICOLON
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C             &lt 2 V           &lt 3 B          &kp INTERNATIONAL_5  &kp N      &kp M      &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 LANGUAGE_1  &lt 2 LANGUAGE_2  &lt 1 SPACE                           &kp SPACE  &kp ENTER                                     &kp DELETE
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        kigo_layer {
            // -----------------------------------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |                     |  6  |  7  |  8  |  9  |   0  |
            // |      |     |     |     |     |     |           |    |     |     |     |  ↑  |      |
            // |SHIFT|     |     |     |     |     |           |     |     |     |  ←  |  ↓  |  →  |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|         | BS | ENT |                   | DEL |

            bindings = <
&kp N1   &kp NUMBER_2  &kp N3  &kp N4  &kp N5                           &kp NUMBER_6      &kp N7             &kp N8   &kp N9     &kp N0
&kp TAB  &kp LS(TAB)   &trans  &trans  &trans  &trans    &kp BACKSLASH  &kp MINUS         &trans             &kp SQT  &kp GRAVE  &trans
&trans   &trans        &trans  &trans  &trans  &trans    &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans   &trans     &trans
&trans   &trans        &trans  &trans  &trans  &trans                   &kp BACKSPACE     &kp DELETE                                     &kp ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        number_FT_layer {
            // -----------------------------------------------------------------------------------------
            // | BT0 | BT1 | BT2 | BT3 | BT4 |                |  -  |  7  |  8  |  9  |  +  |
            // |BTCLR |     |     |     |     |     |           |  /  |  4  |  5  |  6  |  *  | 
            // |SHIFT|     |     |     |     |     |           |  0  |  1  |  2  |   3 |  .  |  =  |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|        | BS | ENT |                  | DEL |

            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5                      &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans
&kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans     &trans  &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans
&trans  &trans  &trans  &trans  &kp F11  &kp F12    &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_N3        &trans
&trans  &trans  &trans  &trans  &trans   &trans             &trans           &trans                                                     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        cursor_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &kp UP_ARROW  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans        &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans                                     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |                     |     |     |     |     |      |
            // |      |     |     |     |     |     |           |    |     |     |     |     |      |
            // |SHIFT|     |     |     |     |     |          |     |     |     |     |     |      |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|        | BS | ENT |                  | DEL |

            bindings = <
&trans          &trans        &trans        &trans          &trans                                 &trans         &trans       &trans           &trans  &trans
&trans          &trans        &trans        &trans          &trans     &trans              &trans  &trans         &kp LC(TAB)  &kp LC(LS(TAB))  &trans  &trans
&kp LEFT_SHIFT  &trans        &trans        &trans          &trans     &trans              &trans  &trans         &trans       &trans           &trans  &trans
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &kp INT_HENKAN  &kp SPACE  &kp INT_MUHENKAN            &kp BACKSPACE  &kp ENTER                                     &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans      &trans         &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &mkp MB1       &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp K_BACK  &kp K_FORWARD  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans      &trans                                     &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        BT_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans
&bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans          &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans          &trans        &trans        &trans        &trans            &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
